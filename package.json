{
	"name": "todo-md",
	"displayName": "Todo MD",
	"description": "Todo tracking based on `todo.txt` format.",
	"version": "2.27.0",
	"publisher": "usernamehw",
	"license": "MIT",
	"icon": "img/icon.png",
	"engines": {
		"vscode": "^1.82.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/usernamehw/vscode-todo-md"
	},
	"bugs": {
		"url": "https://github.com/usernamehw/vscode-todo-md/issues"
	},
	"qna": false,
	"keywords": [
		"todotxt",
		"todo",
		"todos",
		"todolist",
		"todoapp",
		"task",
		"gtd",
		"markdown",
		"plaintext"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Todo Markdown",
			"properties": {
				"todomd.webview.showCompleted": {
					"type": "boolean",
					"markdownDescription": "Whether completed tasks are shown or not in the webview.",
					"default": true
				},
				"todomd.webview.completedStrikeThrough": {
					"type": "boolean",
					"markdownDescription": "Whether completed tasks should have a line drawn on them in the webview.",
					"default": false
				},
				"todomd.webview.showRecurringCompleted": {
					"type": "boolean",
					"markdownDescription": "Whether recurring completed tasks are shown or not in the webview.",
					"default": true
				},
				"todomd.webview.showRecurringUpcoming": {
					"type": "boolean",
					"markdownDescription": "Whether recurring upcoming (not due) tasks are shown or not in the webview.",
					"default": true
				},
				"todomd.webview.showPriority": {
					"type": "boolean",
					"markdownDescription": "Controls whether priority is shown in the webview.",
					"default": true
				},
				"todomd.webview.showCheckbox": {
					"type": "boolean",
					"markdownDescription": "Controls whether checkbox is shown in the webview.",
					"default": true
				},
				"todomd.webview.showNestedTaskCount": {
					"type": "boolean",
					"markdownDescription": "Controls whether nested tasks indicator (like `0/10`) is shown in the webview.",
					"default": false
				},
				"todomd.webview.completionNotificationEnabled": {
					"type": "boolean",
					"markdownDescription": "When true - show notification after completing a task in a webview.",
					"default": false,
					"markdownDeprecationMessage": "Deprecated: Use `#todomd.webview.notificationsEnabled#`"
				},
				"todomd.webview.showTaskDetails": {
					"type": "boolean",
					"markdownDescription": "When true - show box on the bottom of the webview that shows selected task details.",
					"default": false
				},
				"todomd.webview.notificationsEnabled": {
					"type": "boolean",
					"markdownDescription": "When true - show notification after some actions (like task completion) in a webview.",
					"default": false
				},
				"todomd.webview.fontSize": {
					"type": "string",
					"markdownDescription": "Controls font size in the webview. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size)",
					"default": "15px"
				},
				"todomd.webview.fontFamily": {
					"type": "string",
					"markdownDescription": "Controls font family in the webview. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)",
					"default": "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Noto Color Emoji'"
				},
				"todomd.webview.lineHeight": {
					"type": "number",
					"markdownDescription": "Controls line height in the webview.",
					"default": 1.4,
					"minimum": 1,
					"maximum": 3
				},
				"todomd.webview.padding": {
					"type": "string",
					"markdownDescription": "Controls top & bottom padding. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",
					"default": "2px"
				},
				"todomd.webview.indentSize": {
					"type": "string",
					"markdownDescription": "Controls visual indent of nested elements in a webview.",
					"default": "1.8em"
				},
				"todomd.webview.customCheckboxEnabled": {
					"type": "boolean",
					"markdownDescription": "Whether checkbox is rendered as native input element or a custom styled element.",
					"default": true
				},
				"todomd.webview.autoShowSuggest": {
					"type": "boolean",
					"markdownDescription": "Show autocomplete when typing. (When disabled suggest can be called by `Ctrl`+`Space`)",
					"default": true
				},
				"todomd.webview.focusFilterInputOnClick": {
					"type": "boolean",
					"markdownDescription": "Focus filter input after clicking(selecting) any task.",
					"default": true
				},
				"todomd.webview.customCSSPath": {
					"type": "string",
					"markdownDescription": "Absolute path to custom CSS for the webview.",
					"default": ""
				},
				"todomd.webview.tagStyles": {
					"type": "object",
					"markdownDescription": "Set different color for any tag in a webview.",
					"default": {},
					"patternProperties": {
						".+": {
							"type": "object",
							"properties": {
								"color": {
									"type": "string",
									"format": "color"
								},
								"backgroundColor": {
									"type": "string",
									"format": "color"
								}
							}
						}
					}
				},
				"todomd.defaultFile": {
					"type": "string",
					"markdownDescription": "Absolute path to file that Tree Views or commands use when no editor is open that matches `#todomd.activatePattern#`.\n\n[**Pick default file**](command:todomd.specifyDefaultFile)",
					"default": ""
				},
				"todomd.defaultArchiveFile": {
					"type": "string",
					"markdownDescription": "Absolute path to file that all archived tasks will be moved to.\n\n[**Pick archive file**](command:todomd.specifyDefaultArchiveFile)",
					"default": ""
				},
				"todomd.defaultSomedayFile": {
					"type": "string",
					"markdownDescription": "Absolute path to file that is used as the \"someday\" file.\n\n[**Pick someday file**](command:todomd.specifyDefaultSomedayFile)",
					"default": ""
				},
				"todomd.durationIncludeSeconds": {
					"type": "boolean",
					"markdownDescription": "When enabled - duration (editor, hover) includes seconds.",
					"default": false
				},
				"todomd.autoArchiveTasks": {
					"type": "boolean",
					"markdownDescription": "When enabled - will move tasks to archive file (on completion).",
					"default": false
				},
				"todomd.confirmTaskDelete": {
					"type": "string",
					"enum": [
						"always",
						"never",
						"hasNestedTasks"
					],
					"markdownDescription": "Show confirmation when deleting task from Tree View or Webview.",
					"default": "always"
				},
				"todomd.activatePattern": {
					"type": "string",
					"markdownDescription": "Choose files that extension will operate on. By default activated on 3 files (todo.md, someday.md & todo.archive.md). This format is called `Glob`. Examples:\n\nActivate on any (.txt) file - `**/*.txt`.\n\nActivate only on single file (todo.txt) - `**/todo.txt`\n\nActivate on 2 files (todo.txt or task.txt) - `**/{todo,task}.txt`",
					"default": "**/{todo,someday,todo.archive}.md"
				},
				"todomd.getNextNumberOfTasks": {
					"type": "integer",
					"default": 5,
					"minimum": 1,
					"maximum": 15,
					"markdownDescription": "Number of tasks returned by `getFewNextTasks` command."
				},
				"todomd.sortTagsView": {
					"type": "string",
					"enum": [
						"alphabetic",
						"count"
					],
					"default": "alphabetic",
					"description": "Controls tags Tree View sorting."
				},
				"todomd.sortProjectsView": {
					"type": "string",
					"enum": [
						"alphabetic",
						"count"
					],
					"default": "alphabetic",
					"description": "Controls projects Tree View sorting."
				},
				"todomd.sortContextsView": {
					"type": "string",
					"enum": [
						"alphabetic",
						"count"
					],
					"default": "alphabetic",
					"description": "Controls contexts Tree View sorting."
				},
				"todomd.sortNestedTasks": {
					"type": "string",
					"enum": [
						"default",
						"none"
					],
					"enumDescriptions": [
						"Default sorting (due)",
						"No sorting"
					],
					"default": "default",
					"description": "Controls nested tasks sorting in Tree Views."
				},
				"todomd.suggestItems": {
					"type": "object",
					"markdownDescription": "This extension will only autocomplete tags/projects/contexts located in **1** file. This setting allows you to add items and their description(markdown) to autocomplete in all files (where extension is active). Examples: `#tag`, `+project`, `@context`.",
					"patternProperties": {
						"^#": {
							"type": "string",
							"description": "Tag"
						},
						"^\\+": {
							"type": "string",
							"description": "Project"
						},
						"^@": {
							"type": "string",
							"description": "Context"
						}
					},
					"additionalProperties": false,
					"default": {}
				},
				"todomd.counterBadgeEnabled": {
					"type": "boolean",
					"markdownDescription": "Shows small badge to show a number of times the tag/project/context is present in the active document.",
					"default": false
				},
				"todomd.progressChartEnabled": {
					"type": "boolean",
					"markdownDescription": "Controls whether editor nested task decoration (pie chart) is shown or not.",
					"default": true
				},
				"todomd.progressBackground": {
					"type": "string",
					"markdownDescription": "Editor decoration for nested tasks progress (pie chart) background.",
					"format": "color",
					"default": "#c6cdd3"
				},
				"todomd.progressForeground": {
					"type": "string",
					"markdownDescription": "Editor decoration for nested tasks progress (pie chart) foreground.",
					"format": "color",
					"default": "#0077AA"
				},
				"todomd.statusBarMainEnabled": {
					"type": "boolean",
					"markdownDescription": "Controls visibility of status bar that shows next tasks to complete.",
					"markdownDeprecationMessage": "Deprecated in favor of `#todomd.mainStatusBarItem#` setting.",
					"default": false
				},
				"todomd.mainStatusBarItem": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"markdownDescription": "Controls visibility of this status bar item.",
							"default": false
						},
						"hoverEnabled": {
							"type": "boolean",
							"markdownDescription": "Controls whether or not to show hover for this status bar item",
							"default": true
						},
						"alignment": {
							"type": "string",
							"default": "left",
							"enum": [
								"left",
								"right"
							]
						},
						"priority": {
							"type": "integer",
							"default": -20001
						},
						"truncate": {
							"type": "integer",
							"markdownDescription": "If the message length is longer - crop it at the end. `0` to disable.",
							"minimum": 0,
							"default": 0
						},
						"onClick": {
							"type": "string",
							"enum": [
								"completeTask",
								"revealTask",
								"nothing"
							],
							"default": "completeTask",
							"markdownDescription": "Controls visibility of status bar that shows next tasks to complete."
						},
						"targetTasks": {
							"type": "string",
							"enum": [
								"all",
								"due"
							],
							"default": "all"
						},
						"highlightOverdue": {
							"type": "string",
							"enum": [
								"none",
								"errorBg",
								"errorFg",
								"warningBg",
								"warningFg"
							],
							"default": "none"
						},
						"highlightDue": {
							"type": "string",
							"enum": [
								"none",
								"errorBg",
								"errorFg",
								"warningBg",
								"warningFg"
							],
							"default": "none"
						}
					},
					"default": {
						"enabled": false,
						"hoverEnabled": true,
						"alignment": "left",
						"priority": -20001,
						"truncate": 0,
						"onClick": "completeTask",
						"targetTasks": "all",
						"highlightOverdue": "none",
						"highlightDue": "none"
					},
					"additionalProperties": false,
					"markdownDescription": "Configure appearance/behavior of main status bar item (shows next task to complete)."
				},
				"todomd.statusBarCounterEnabled": {
					"type": "boolean",
					"markdownDescription": "Controls visibility of status bar task progress item `1/3 33%`",
					"markdownDeprecationMessage": "Deprecated in favor of `#todomd.mainStatusBarItem#` setting.",
					"default": false
				},
				"todomd.progressStatusBarItem": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"markdownDescription": "Controls visibility of this status bar item.",
							"default": false
						},
						"alignment": {
							"type": "string",
							"default": "left",
							"enum": [
								"left",
								"right"
							]
						},
						"priority": {
							"type": "integer",
							"default": -20000
						}
					},
					"default": {
						"enabled": false,
						"alignment": "left",
						"priority": -20000
					},
					"additionalProperties": false,
					"markdownDescription": "Configure appearance/behavior of the progress status bar item (shows only when active text editor matches `#todomd.activatePattern#`) with text format: `1/3 33%`."
				},
				"todomd.addCreationDate": {
					"type": "boolean",
					"markdownDescription": "When creating a task add creation date to it: `{cr:2020-04-30}`",
					"default": false
				},
				"todomd.completionDateIncludeDate": {
					"type": "boolean",
					"markdownDescription": "Whether to include date when completing a task: `{cm}` vs `{cm:2020-04-30}`",
					"default": true
				},
				"todomd.completionDateIncludeTime": {
					"type": "boolean",
					"markdownDescription": "When completing a task add date and time: `{cm:2020-04-30T09:11:17}`",
					"default": false
				},
				"todomd.creationDateIncludeTime": {
					"type": "boolean",
					"markdownDescription": "When creating a task add date and time: `{cr:2020-04-30T09:11:17}`",
					"default": false
				},
				"todomd.closestDueDateIncludeWeekday": {
					"type": "boolean",
					"markdownDescription": "When enabled - editor decoration that shows number of days to the due date adds the weekday name.",
					"default": false
				},
				"todomd.autoBumpRecurringOverdueDate": {
					"type": "boolean",
					"markdownDescription": "When completing overdue recurring task - replace the starting date with today's date.",
					"default": false
				},
				"todomd.isDev": {
					"type": "boolean",
					"markdownDescription": "For emulating dev mode. Most likely of no use to anyone, except the extension author.",
					"default": false
				},
				"todomd.tabSize": {
					"type": "number",
					"minimum": 1,
					"maximum": 8,
					"markdownDescription": "Number used for parsing nested tasks when indentation cannot be guessed (file is not opened in editor).",
					"default": 4
				},
				"todomd.savedFilters": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"title": {
								"type": "string"
							},
							"filter": {
								"type": "string"
							}
						}
					},
					"markdownDescription": "Filters that you can pick when applying a filter.",
					"default": []
				},
				"todomd.treeViews": {
					"type": "array",
					"items": {
						"type": "object",
						"required": [
							"filter",
							"title"
						],
						"properties": {
							"title": {
								"type": "string"
							},
							"filter": {
								"type": "string"
							}
						}
					},
					"maxLength": 3,
					"markdownDescription": "Add more tree views with predefined filters.",
					"default": []
				},
				"todomd.treeView.showBadge": {
					"type": "boolean",
					"markdownDescription": "Whether or not to show due tasks counter badge for tree view container.",
					"default": true
				},
				"todomd.treeView.useVscodeCheckboxApi": {
					"type": "boolean",
					"markdownDescription": "When checked - will use vscode api to show checkboxes https://github.com/microsoft/vscode/issues/116141.",
					"default": true
				},
				"todomd.labelDueSymbol": {
					"type": "string",
					"markdownDescription": "Prefix for task that is due in labels (tree view, notification, modal, quick pick).",
					"default": "📗 "
				},
				"todomd.labelNotDueSymbol": {
					"type": "string",
					"markdownDescription": "Prefix for task that that is not due in labels (tree view, notification, modal, quick pick).",
					"default": "📅 "
				},
				"todomd.labelOverdueSymbol": {
					"type": "string",
					"markdownDescription": "Prefix for task that is overdue in labels (tree view, notification, modal, quick pick).",
					"default": "📕 "
				},
				"todomd.labelInvalidDueSymbol": {
					"type": "string",
					"markdownDescription": "Prefix for task that has invalid due date in labels (tree view, notification, modal, quick pick).",
					"default": "🟣 "
				},
				"todomd.labelFavorite": {
					"type": "string",
					"markdownDescription": "Label shown when task has favorite `{f}` special tag. (tree view, notification, modal, quick pick)",
					"default": " ❤️ "
				},
				"todomd.labelShowItems": {
					"type": "boolean",
					"markdownDescription": "Show projects/tags/contexts in labels (tree view, notification, modal, quick pick).",
					"default": true
				},
				"todomd.useBoldTextInLabels": {
					"type": "boolean",
					"markdownDescription": "Show projects/tags/contexts in labels in **BOLD**.",
					"default": true
				},
				"todomd.completedStrikeThrough": {
					"type": "boolean",
					"markdownDescription": "Show strike-through text decoration for completed tasks in editor.",
					"default": true
				},
				"todomd.setDueDateThisWeekDay": {
					"type": "string",
					"markdownDescription": "Week day when using set due date command or suggest `SET_DUE_THIS_WEEK`.",
					"enum": [
						"Friday",
						"Sunday"
					],
					"default": "Friday"
				},
				"todomd.setDueDateNextWeekDay": {
					"type": "string",
					"markdownDescription": "Week day when using set due date command or suggest `SET_DUE_NEXT_WEEK`.",
					"enum": [
						"Monday",
						"Friday",
						"Sunday"
					],
					"default": "Friday"
				},
				"todomd.decorations": {
					"type": "object",
					"markdownDescription": "Advanced text editor decoration tweaking. [docs](https://github.com/usernamehw/vscode-todo-md/blob/master/docs/docs.md#advanced-editor-decorations)",
					"default": {
						"project": {},
						"context": {},
						"tag": {},
						"comment": {},
						"notDue": {},
						"due": {},
						"overdue": {},
						"invalidDue": {},
						"favorite": {},
						"priorityA": {},
						"priorityB": {},
						"priorityC": {},
						"priorityD": {},
						"priorityE": {},
						"priorityF": {},
						"completedTask": {}
					},
					"patternProperties": {
						"^(project|context|tag|comment|notDue|due|overdue|invalidDue|favorite|priorityA|priorityB|priorityC|priorityD|priorityE|priorityF|completedTask|(#|\\+|@)\\S+)$": {
							"type": "object",
							"properties": {
								"isWholeLine": {
									"description": "Should the decoration be rendered also on the whitespace after the line text.\nDefaults to `false`.",
									"type": "boolean"
								},
								"rangeBehavior": {
									"description": "Customize the growing behavior of the decoration when edits occur at the edges of the decoration's range.\nDefaults to `DecorationRangeBehavior.OpenOpen`.",
									"enum": [
										0,
										1,
										2,
										3
									],
									"type": "number",
									"enumDescriptions": [
										"OpenOpen",
										"ClosedClosed",
										"OpenClosed",
										"ClosedOpen"
									]
								},
								"overviewRulerLane": {
									"enum": [
										1,
										2,
										4,
										7
									],
									"type": "number",
									"enumDescriptions": [
										"Left",
										"Center",
										"Right",
										"Full"
									]
								},
								"light": {
									"description": "Represents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).",
									"type": "object",
									"properties": {
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"outline": {
											"type": "string"
										},
										"outlineColor": {
											"format": "color",
											"type": "string"
										},
										"outlineStyle": {
											"type": "string"
										},
										"outlineWidth": {
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"borderRadius": {
											"type": "string"
										},
										"borderSpacing": {
											"type": "string"
										},
										"borderStyle": {
											"type": "string"
										},
										"borderWidth": {
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"cursor": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"opacity": {
											"type": "string"
										},
										"letterSpacing": {
											"type": "string"
										},
										"gutterIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the gutter.",
											"type": "string"
										},
										"gutterIconSize": {
											"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
											"type": "string"
										},
										"overviewRulerColor": {
											"format": "color",
											"type": "string"
										},
										"before": {
											"description": "Defines the rendering options of the attachment that is inserted before the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										},
										"after": {
											"description": "Defines the rendering options of the attachment that is inserted after the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										}
									}
								},
								"dark": {
									"description": "Represents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).",
									"type": "object",
									"properties": {
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"outline": {
											"type": "string"
										},
										"outlineColor": {
											"format": "color",
											"type": "string"
										},
										"outlineStyle": {
											"type": "string"
										},
										"outlineWidth": {
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"borderRadius": {
											"type": "string"
										},
										"borderSpacing": {
											"type": "string"
										},
										"borderStyle": {
											"type": "string"
										},
										"borderWidth": {
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"cursor": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"opacity": {
											"type": "string"
										},
										"letterSpacing": {
											"type": "string"
										},
										"gutterIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the gutter.",
											"type": "string"
										},
										"gutterIconSize": {
											"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
											"type": "string"
										},
										"overviewRulerColor": {
											"format": "color",
											"type": "string"
										},
										"before": {
											"description": "Defines the rendering options of the attachment that is inserted before the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										},
										"after": {
											"description": "Defines the rendering options of the attachment that is inserted after the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										}
									}
								},
								"backgroundColor": {
									"format": "color",
									"type": "string"
								},
								"outline": {
									"type": "string"
								},
								"outlineColor": {
									"format": "color",
									"type": "string"
								},
								"outlineStyle": {
									"type": "string"
								},
								"outlineWidth": {
									"type": "string"
								},
								"border": {
									"type": "string"
								},
								"borderColor": {
									"format": "color",
									"type": "string"
								},
								"borderRadius": {
									"type": "string"
								},
								"borderSpacing": {
									"type": "string"
								},
								"borderStyle": {
									"type": "string"
								},
								"borderWidth": {
									"type": "string"
								},
								"fontStyle": {
									"type": "string"
								},
								"fontWeight": {
									"type": "string"
								},
								"textDecoration": {
									"type": "string"
								},
								"cursor": {
									"type": "string"
								},
								"color": {
									"format": "color",
									"type": "string"
								},
								"opacity": {
									"type": "string"
								},
								"letterSpacing": {
									"type": "string"
								},
								"gutterIconPath": {
									"description": "An **absolute path** or an URI to an image to be rendered in the gutter.",
									"type": "string"
								},
								"gutterIconSize": {
									"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
									"type": "string"
								},
								"overviewRulerColor": {
									"format": "color",
									"type": "string"
								},
								"before": {
									"description": "Defines the rendering options of the attachment that is inserted before the decorated text.",
									"type": "object",
									"properties": {
										"contentText": {
											"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
											"type": "string"
										},
										"contentIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"margin": {
											"type": "string"
										},
										"width": {
											"type": "string"
										},
										"height": {
											"type": "string"
										}
									}
								},
								"after": {
									"description": "Defines the rendering options of the attachment that is inserted after the decorated text.",
									"type": "object",
									"properties": {
										"contentText": {
											"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
											"type": "string"
										},
										"contentIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"margin": {
											"type": "string"
										},
										"width": {
											"type": "string"
										},
										"height": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"additionalProperties": false
				}
			}
		},
		"commands": [
			{
				"command": "todomd.toggleComment",
				"title": "Toggle Comment",
				"description": "Toggle comment. <kbd>Ctrl/Cmd</kbd>+<kbd>/</kbd> (Only when in todo.md file)",
				"category": "Todo MD"
			},
			{
				"command": "todomd.toggleTagsTreeViewSorting",
				"title": "Toggle Tags Tree View Sorting",
				"category": "Todo MD",
				"icon": "$(ungroup-by-ref-type)"
			},
			{
				"command": "todomd.toggleProjectsTreeViewSorting",
				"title": "Toggle Projects Tree View Sorting",
				"category": "Todo MD",
				"icon": "$(ungroup-by-ref-type)"
			},
			{
				"command": "todomd.toggleContextsTreeViewSorting",
				"title": "Toggle Contexts Tree View Sorting",
				"category": "Todo MD",
				"icon": "$(ungroup-by-ref-type)"
			},
			{
				"command": "todomd.showWebviewSettings",
				"title": "Show Webview Settings",
				"category": "Todo MD",
				"icon": "$(settings-gear)"
			},
			{
				"command": "todomd.webview.toggleShowRecurringUpcoming",
				"title": "Toggle setting to show recurring upcoming tasks in webview.",
				"category": "Todo MD",
				"icon": "$(milestone)"
			},
			{
				"command": "todomd.focusTasksWebviewAndInput",
				"title": "Focus Tasks Webview and its filter input",
				"description": "Supports arguments {\"selectInputText\": boolean, \"fillInputValue\": string}",
				"category": "Todo MD"
			},
			{
				"command": "todomd.collapseAllNestedTasks",
				"title": "Collapse all nested tasks.",
				"category": "Todo MD",
				"icon": "$(collapse-all)"
			},
			{
				"command": "todomd.expandAllTasks",
				"title": "Expand all tasks.",
				"category": "Todo MD",
				"icon": "$(expand-all)"
			},
			{
				"command": "todomd.incrementPriority",
				"title": "Increment priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.decrementPriority",
				"title": "Decrement priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.toggleDone",
				"title": "Toggle completion",
				"description": "<kbd>Alt</kbd>+<kbd>D</kbd> - Toggle Done (Completion)",
				"category": "Todo MD",
				"icon": "$(check)"
			},
			{
				"command": "todomd.hideTask",
				"title": "Hide the Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.deleteTask",
				"title": "Delete the Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.addTaskToDefaultFile",
				"title": "Add a Task to DEFAULT file",
				"category": "Todo MD",
				"icon": "$(add)"
			},
			{
				"command": "todomd.addTaskToActiveFile",
				"title": "Add a Task to ACTIVE file",
				"category": "Todo MD",
				"icon": "$(add)"
			},
			{
				"command": "todomd.addTaskToActiveFileWebview",
				"title": "Add a Task to ACTIVE file",
				"category": "Todo MD",
				"icon": "$(add)"
			},
			{
				"command": "todomd.sortByDefault",
				"title": "Sort by Due Date & Priority (default sort)",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByPriority",
				"title": "Sort by Priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByProject",
				"title": "Sort by Project",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByTag",
				"title": "Sort by Tag",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByContext",
				"title": "Sort by Context",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByCreationDate",
				"title": "Sort by Creation Date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByDueDate",
				"title": "Sort by Due Date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.sortByCompletionDate",
				"title": "Sort by Completion Date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.setDueDate",
				"description": "Helper command to set due date relative to now. [Docs](https://github.com/usernamehw/vscode-todo-md/blob/master/docs/docs.md#set-due-date-helper-function-todomdsetduedate)",
				"title": "Set due date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.setDate",
				"title": "Set date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.archiveCompletedTasks",
				"title": "Move completed tasks to Archive file",
				"category": "Todo MD"
			},
			{
				"command": "todomd.startTask",
				"description": "Start task (when completed adds `{duration}` special tag)",
				"title": "Start",
				"category": "Todo MD"
			},
			{
				"command": "todomd.toggleFavorite",
				"description": "Toggle Favorite (`{f}` special tag).",
				"title": "Toggle Favorite",
				"category": "Todo MD"
			},
			{
				"command": "todomd.openDefaultFile",
				"title": "Open default file",
				"category": "Todo MD",
				"icon": "$(go-to-file)"
			},
			{
				"command": "todomd.openDefaultArchiveFile",
				"title": "Open default Archive file",
				"category": "Todo MD"
			},
			{
				"command": "todomd.openSomedayFile",
				"title": "Open Someday file",
				"category": "Todo MD"
			},
			{
				"command": "todomd.createSimilarTask",
				"title": "Create similar task (same tags, projects, contexts).",
				"category": "Todo MD"
			},
			{
				"command": "todomd.completeTask",
				"title": "Complete a Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getNextTask",
				"description": "Get due task from main file. If none are due - get one with the highest priority.",
				"title": "Get 1 next task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getFewNextTasks",
				"description": "Get several tasks. Due tasks are on top.",
				"title": "Get a few next tasks.",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getRandomTask",
				"title": "Get random task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.applyFilterToTreeView",
				"title": "Apply Filter",
				"category": "Todo MD",
				"icon": "$(filter)"
			},
			{
				"command": "todomd.clearTreeViewFilter",
				"title": "Clear Filter",
				"category": "Todo MD",
				"icon": "$(clear-all)"
			},
			{
				"command": "todomd.resetAllRecurringTasks",
				"title": "Reset all Recurring tasks",
				"category": "Todo MD"
			},
			{
				"command": "todomd.followLink",
				"title": "Follow link",
				"category": "Todo MD"
			},
			{
				"command": "todomd.removeOverdue",
				"title": "Remove overdue",
				"category": "Todo MD"
			},
			{
				"command": "todomd.moveToSomeday",
				"title": "Move to Someday file",
				"category": "Todo MD"
			},
			{
				"command": "todomd.dev.clearGlobalState",
				"title": "DEV: Clear global state",
				"category": "Todo MD"
			},
			{
				"command": "todomd.dev.setLastVisit",
				"title": "DEV: Set last visit",
				"category": "Todo MD"
			},
			{
				"command": "todomd.dev.showGlobalState",
				"title": "DEV: Show Global State",
				"category": "Todo MD"
			},
			{
				"command": "todomd.dev.removeAllOverdue",
				"title": "DEV: Remove all overdue tags.",
				"category": "Todo MD"
			}
		],
		"keybindings": [
			{
				"command": "todomd.toggleDone",
				"key": "alt+D",
				"when": "editorTextFocus && todomd:isActive"
			},
			{
				"command": "todomd.toggleComment",
				"key": "ctrl+/",
				"mac": "cmd+/",
				"when": "editorTextFocus && todomd:isActive"
			}
		],
		"colors": [
			{
				"id": "todomd.favoriteTaskBackground",
				"defaults": {
					"light": "#f62caf18",
					"dark": "#f62caf18",
					"highContrast": "#f62caf18"
				},
				"description": "Entire line background color for favorite tasks `{f}`."
			},
			{
				"id": "todomd.commentForeground",
				"defaults": {
					"light": "#b4b4b4",
					"dark": "#b4b4b4",
					"highContrast": "#b4b4b4"
				},
				"description": "Color of comments `# Comment`"
			},
			{
				"id": "todomd.priorityAForeground",
				"defaults": {
					"light": "#ec4f47",
					"dark": "#ec4f47",
					"highContrast": "#ec4f47"
				},
				"description": "`(A)`"
			},
			{
				"id": "todomd.priorityBForeground",
				"defaults": {
					"light": "#fd9f9a",
					"dark": "#fd9f9a",
					"highContrast": "#fd9f9a"
				},
				"description": "`(B)`"
			},
			{
				"id": "todomd.priorityCForeground",
				"defaults": {
					"light": "#ffb648",
					"dark": "#ffb039",
					"highContrast": "#ffb648"
				},
				"description": "`(C)`"
			},
			{
				"id": "todomd.priorityDForeground",
				"defaults": {
					"light": "#f1d900",
					"dark": "#e2cb00",
					"highContrast": "#f1d900"
				},
				"description": "`(D)`"
			},
			{
				"id": "todomd.priorityEForeground",
				"defaults": {
					"light": "#ace000",
					"dark": "#97c500",
					"highContrast": "#ace000"
				},
				"description": "`(E)`"
			},
			{
				"id": "todomd.priorityFForeground",
				"defaults": {
					"light": "#00cfad",
					"dark": "#00cfad",
					"highContrast": "#00cfad"
				},
				"description": "`(F)`"
			},
			{
				"id": "todomd.tagForeground",
				"defaults": {
					"light": "#029cdf",
					"dark": "#1abaff",
					"highContrast": "#1abaff"
				},
				"description": "Tag color `#Tag`"
			},
			{
				"id": "todomd.contextForeground",
				"defaults": {
					"light": "#7284eb",
					"dark": "#7284eb",
					"highContrast": "#7284eb"
				},
				"description": "Context color `@Context`"
			},
			{
				"id": "todomd.specialTagForeground",
				"defaults": {
					"light": "#7e8081",
					"dark": "#c3ccfc",
					"highContrast": "#c3ccfc"
				},
				"description": "Color of special tags `{h}`"
			},
			{
				"id": "todomd.projectForeground",
				"defaults": {
					"light": "#36cc9a",
					"dark": "#36cc9a",
					"highContrast": "#36cc9a"
				},
				"description": "Project color `+Project`"
			},
			{
				"id": "todomd.notDueForeground",
				"defaults": {
					"light": "#7e8081",
					"dark": "#c3ccfc",
					"highContrast": "#c3ccfc"
				},
				"description": "Not due"
			},
			{
				"id": "todomd.dueForeground",
				"defaults": {
					"light": "#01c208",
					"dark": "#35c03a",
					"highContrast": "#37df3d"
				},
				"description": "Due"
			},
			{
				"id": "todomd.overdueForeground",
				"defaults": {
					"light": "#d44343",
					"dark": "#d44343",
					"highContrast": "#f64f4f"
				},
				"description": "Overdue"
			},
			{
				"id": "todomd.invalidDueDateForeground",
				"defaults": {
					"light": "#ffffff",
					"dark": "#ffffff",
					"highContrast": "#ffffff"
				},
				"description": "Due date that is either has an invalid format `2020-05` or an invalid date `2020-12-35`"
			},
			{
				"id": "todomd.invalidDueDateBackground",
				"defaults": {
					"light": "#7284eb",
					"dark": "#7284eb",
					"highContrast": "#7284eb"
				},
				"description": "Due date that is either has an invalid format `2020-05` or an invalid date `2020-12-35`"
			},
			{
				"id": "todomd.nestedTasksCountBackground",
				"defaults": {
					"light": "#f7f3c099",
					"dark": "#e0d971",
					"highContrast": "#e0d971"
				},
				"description": "Nested tasks counter editor decoration background."
			},
			{
				"id": "todomd.nestedTasksCountForeground",
				"defaults": {
					"light": "#000000",
					"dark": "#000000",
					"highContrast": "#000000"
				},
				"description": "Nested tasks counter editor decoration foreground."
			},
			{
				"id": "todomd.nestedTasksCountBorder",
				"defaults": {
					"light": "#dfd987bd",
					"dark": "#fff0",
					"highContrast": "#fff0"
				},
				"description": "Nested tasks counter editor decoration border."
			},
			{
				"id": "todomd.treeViewCompletedTaskIcon",
				"defaults": {
					"light": "#7cc54b",
					"dark": "#7cc54b",
					"highContrast": "#7cc54b"
				},
				"description": "Color of completed task icon in Tree View."
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "todomd.applyFilterToTreeView",
					"when": "view == todomd.tasks && !todomd:filterActive",
					"group": "navigation"
				},
				{
					"command": "todomd.clearTreeViewFilter",
					"when": "view == todomd.tasks && todomd:filterActive",
					"group": "navigation"
				},
				{
					"command": "todomd.addTaskToActiveFile",
					"when": "view =~ /todomd.(tasks)/",
					"group": "navigation"
				},
				{
					"command": "todomd.addTaskToActiveFileWebview",
					"when": "view =~ /todomd.(webviewTasks)/",
					"group": "navigation"
				},
				{
					"command": "todomd.openDefaultFile",
					"when": "view == todomd.tasks",
					"group": "navigation"
				},
				{
					"command": "todomd.showWebviewSettings",
					"when": "view == todomd.webviewTasks",
					"group": "navigation@8"
				},
				{
					"command": "todomd.webview.toggleShowRecurringUpcoming",
					"when": "view == todomd.webviewTasks",
					"group": "navigation@7"
				},
				{
					"command": "todomd.collapseAllNestedTasks",
					"alt": "todomd.expandAllTasks",
					"when": "view == todomd.webviewTasks",
					"group": "navigation@9"
				},
				{
					"command": "todomd.toggleTagsTreeViewSorting",
					"when": "view == todomd.tags",
					"group": "navigation@9"
				},
				{
					"command": "todomd.toggleProjectsTreeViewSorting",
					"when": "view == todomd.projects",
					"group": "navigation@9"
				},
				{
					"command": "todomd.toggleContextsTreeViewSorting",
					"when": "view == todomd.contexts",
					"group": "navigation@9"
				}
			],
			"view/item/context": [
				{
					"command": "todomd.startTask",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem =~ /(task|taskWithLink)/",
					"group": "1_0"
				},
				{
					"command": "todomd.toggleFavorite",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem =~ /(task|taskWithLink)/",
					"group": "2_0"
				},
				{
					"command": "todomd.followLink",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem == taskWithLink",
					"group": "3_0"
				},
				{
					"command": "todomd.hideTask",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem =~ /(task|taskWithLink)/",
					"group": "4_0"
				},
				{
					"command": "todomd.deleteTask",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem =~ /(task|taskWithLink)/",
					"group": "7_0"
				},
				{
					"command": "todomd.toggleDone",
					"when": "view =~ /todomd.(tasks|due|projects|tags|contexts|generic1|generic2|generic3)/ && viewItem =~ /(task|taskWithLink)/ && !config.todomd.treeView.useVscodeCheckboxApi",
					"group": "inline"
				}
			],
			"todomd.contextMenu": [
				{
					"submenu": "todomd.sortMenu",
					"group": "0@0"
				},
				{
					"command": "todomd.setDueDate",
					"group": "1@0"
				},
				{
					"command": "todomd.startTask",
					"group": "2@0"
				},
				{
					"command": "todomd.incrementPriority",
					"group": "3@0"
				},
				{
					"command": "todomd.decrementPriority",
					"group": "3@1"
				}
			],
			"todomd.sortMenu": [
				{
					"command": "todomd.sortByDefault",
					"group": "0@0"
				},
				{
					"command": "todomd.sortByPriority",
					"group": "0@1"
				},
				{
					"command": "todomd.sortByProject",
					"group": "0@2"
				},
				{
					"command": "todomd.sortByTag",
					"group": "0@3"
				},
				{
					"command": "todomd.sortByContext",
					"group": "0@4"
				},
				{
					"command": "todomd.sortByDueDate",
					"group": "0@5"
				},
				{
					"command": "todomd.sortByCompletionDate",
					"group": "0@6"
				},
				{
					"command": "todomd.sortByCreationDate",
					"group": "0@7"
				}
			],
			"editor/context": [
				{
					"submenu": "todomd.contextMenu",
					"group": "navigation",
					"when": "todomd:isActive"
				}
			],
			"commandPalette": [
				{
					"command": "todomd.followLink",
					"when": "false"
				},
				{
					"command": "todomd.hideTask",
					"when": "false"
				},
				{
					"command": "todomd.deleteTask",
					"when": "false"
				},
				{
					"command": "todomd.toggleTagsTreeViewSorting",
					"when": "false"
				},
				{
					"command": "todomd.toggleProjectsTreeViewSorting",
					"when": "false"
				},
				{
					"command": "todomd.toggleContextsTreeViewSorting",
					"when": "false"
				},
				{
					"command": "todomd.focusTasksWebviewAndInput",
					"when": "false"
				},
				{
					"command": "todomd.addTaskToActiveFileWebview",
					"when": "false"
				},
				{
					"command": "todomd.setDueDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.setDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.toggleDone",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByDefault",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByPriority",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByProject",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByTag",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByContext",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByCreationDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByDueDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByCompletionDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.archiveCompletedTasks",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.moveToSomeday",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.createSimilarTask",
					"description": "Create similar task (same tags, projects, contexts).",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.startTask",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.toggleComment",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.dev.setLastVisit",
					"when": "todomd:isDev"
				},
				{
					"command": "todomd.dev.clearGlobalState",
					"when": "todomd:isDev"
				},
				{
					"command": "todomd.dev.showGlobalState",
					"when": "todomd:isDev"
				},
				{
					"command": "todomd.dev.removeAllOverdue",
					"when": "todomd:isDev"
				}
			]
		},
		"submenus": [
			{
				"id": "todomd.contextMenu",
				"label": "Todo MD"
			},
			{
				"id": "todomd.sortMenu",
				"label": "Sort"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "todomd",
					"icon": "$(checklist)",
					"title": "TodoMD"
				}
			]
		},
		"views": {
			"todomd": [
				{
					"type": "webview",
					"id": "todomd.webviewTasks",
					"contextualTitle": "Tasks",
					"name": "Webview",
					"icon": "$(check)"
				},
				{
					"id": "todomd.tasks",
					"name": "Tasks"
				},
				{
					"id": "todomd.tags",
					"name": "Tags",
					"visibility": "collapsed"
				},
				{
					"id": "todomd.projects",
					"name": "Projects",
					"visibility": "collapsed"
				},
				{
					"id": "todomd.contexts",
					"name": "Contexts",
					"visibility": "collapsed"
				},
				{
					"id": "todomd.archived",
					"name": "Archived",
					"visibility": "collapsed"
				},
				{
					"id": "todomd.due",
					"name": "Due",
					"visibility": "collapsed"
				},
				{
					"id": "todomd.generic1",
					"name": "Generic1",
					"when": "todomd:generic1FilterExists"
				},
				{
					"id": "todomd.generic2",
					"name": "Generic2",
					"when": "todomd:generic2FilterExists"
				},
				{
					"id": "todomd.generic3",
					"name": "Generic3",
					"when": "todomd:generic3FilterExists"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "todomd.archived",
				"when": "todomd:archivedFileNotSpecified",
				"contents": "Archived file path not set.\n\n[Pick file to use as archived file](command:todomd.specifyDefaultArchiveFile)"
			}
		]
	},
	"browserslist": [
		"chrome 114"
	],
	"scripts": {
		"watch": "concurrently -r \"npm:watch:*\"",
		"vscode:prepublish": "npm run scss & npm run webview & webpack --mode production --color",
		"postinstall": "node scripts/copyWebviewResourcesFromNodeModules.js",
		"watch:extension": "webpack --mode development --watch --stats minimal",
		"scss": "sass --no-source-map --style=compressed media/scss:media",
		"watch:scss": "sass --watch media/scss:media",
		"copyAndCompressVendorCss": "sass --style=compressed --no-source-map node_modules/vscode-codicons/dist/codicon.css:media/vendor/codicon.css",
		"webview": "webpack --mode production --config media/webpack.config.js",
		"watch:webview": "webpack --watch --stats minimal --mode development --config media/webpack.config.js",
		"watch-tests": "tsc -watch -p ./",
		"test": "node ./dist/test/runTest.js",
		"generateDecorationSchema": "tsc scripts\\generateDecorationSchema.ts && node scripts\\generateDecorationSchema.js"
	},
	"devDependencies": {
		"@babel/eslint-parser": "^7.22.15",
		"@soda/friendly-errors-webpack-plugin": "^1.8.1",
		"@types/chai": "^4.3.6",
		"@types/glob": "^8.1.0",
		"@types/lodash": "^4.14.199",
		"@types/mocha": "^10.0.1",
		"@types/node": "18.x",
		"@types/vscode": "^1.82.0",
		"@typescript-eslint/eslint-plugin": "^5.62.0",
		"@typescript-eslint/parser": "^5.62.0",
		"@vue/compiler-sfc": "^3.3.4",
		"chai": "^4.3.8",
		"concurrently": "^8.2.1",
		"css-loader": "^6.8.1",
		"eslint": "^8.50.0",
		"eslint-plugin-html": "^7.1.0",
		"eslint-plugin-vue": "^9.17.0",
		"glob": "^8.1.0",
		"mocha": "^10.2.0",
		"sass": "^1.68.0",
		"sass-loader": "^13.3.2",
		"source-map-support": "^0.5.21",
		"style-loader": "^3.3.3",
		"stylelint": "^14.16.1",
		"stylelint-config-standard": "^29.0.0",
		"stylelint-config-standard-scss": "^6.1.0",
		"stylelint-csstree-validator": "^2.1.0",
		"stylelint-no-unsupported-browser-features": "^6.1.0",
		"stylelint-order": "^6.0.3",
		"stylelint-scss": "^4.7.0",
		"ts-loader": "^9.4.4",
		"typescript": "^5.2.2",
		"typescript-json-schema": "^0.61.0",
		"vscode-codicons": "0.0.17",
		"vscode-test": "^1.6.1",
		"vue-loader": "^17.2.2",
		"vue-style-loader": "^4.1.3",
		"vue-template-compiler": "^2.7.14",
		"webpack": "^5.88.2",
		"webpack-cli": "^5.1.4"
	},
	"dependencies": {
		"@kyvg/vue3-notification": "^3.0.2",
		"dayjs": "^1.11.10",
		"fuzzysort": "^2.0.4",
		"lodash": "^4.17.21",
		"marked": "^9.0.3",
		"mitt": "^3.0.1",
		"pinia": "^2.1.6",
		"vue": "^3.3.4",
		"vue-final-modal": "^3.4.11"
	}
}
